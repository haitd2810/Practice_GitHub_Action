# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests
# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests
name: "Ruby on Rails CI Automated Tests"

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password

      redis:
        image: redis:4.0
        ports:
          - "6379:6379"

    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://postgres:password@localhost:5432/hash_pick_test"
      REDIS_URL: "redis://localhost:6379"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0.5'
          bundler-cache: true
          
      - name: Install dependencies
        run: bundle install
        shell: bash

      - name: Run RSpec tests
        id: rspec
        run: |
          bundle exec rspec --format documentation > rspec_output.txt || true
          echo "::set-output name=result::$(cat rspec_output.txt)"
        shell: bash
        env:
          RAILS_ENV: test

       - name: Update PR title with test result
        if: github.event_name == 'pull_request'
        run: |
          RESULT=$(cat rspec_output.txt)
          EXAMPLES=$(echo "$RESULT" | grep -Eo '[0-9]+ examples')
          FAILURES=$(echo "$RESULT" | grep -Eo '[0-9]+ failures')
          TITLE="Test results: $EXAMPLES, $FAILURES"
          PR_NUMBER=$(echo "${{ github.event.pull_request.number }}")
          curl -s -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"title\":\"$TITLE\"}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER"
